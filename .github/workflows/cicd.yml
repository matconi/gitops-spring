# name: CI/CD GitOps

# on:
#   push:
#     branches:
#       - 'main'
#     pull_request:
#       - 'main'
      
# jobs:
#   test:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up JDK 11
#         uses: actions/setup-java@v3
#         with:
#           java-version: '11'
#           distribution: 'adopt'

#       - name: Set up Maven dependencies caching
#         uses: actions/cache@v3
#         with:
#           path: ~/.m2
#           key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#           restore-keys: ${{ runner.os }}-m2

#       - name: Install Maven dependencies
#         run: mvn install

#       - name: Run tests - Verify
#         run: mvn --batch-mode --update-snapshots verify

#   build-and-push:
#     if: ${{ github.ref == 'refs/heads/main' }}
#     runs-on: ubuntu-latest
#     needs:
#       - test

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
      
#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ap-south-1

#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v2

#       - name: Build, tag, and push docker image to Amazon ECR
#         env:
#           ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           ECR_REPOSITORY: ${{ github.GITHUB_REPOSITORY }}
#           IMAGE_TAG: ${{ github.sha }}
#         run: |
#           echo "ðŸ”¨ Building image..."
#           docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./module
#           echo "ðŸš€ Pushing image to ECR..."
#           docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#           echo "ðŸ”„ Updating latest image..."
#           docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest