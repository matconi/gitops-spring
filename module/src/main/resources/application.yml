server:
  servlet:
    context-path: /
  port: 800
#eureka:
#  client:
#    fetch-register: true
#    register-with-eureka: true
#    defaultZone: http://localhost:8761/eureka
spring:
  config:
    import: optional:secrets.properties
  application:
    name: module
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8081/realms/realm
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

timefold:
  solver:
    termination:
      spent-limit: 5s

logging:
  level:
    ai:
      #timefold:
        #solver: debug

management:
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include: "health,prometheus"
  endpoint:
    health:
      enabled: true
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  otlp:
    metrics:
      export:
        url: http://localhost:4318/v1/metrics
        step: 10s
    tracing:
      endpoint: http://localhost:4318/v1/traces
      export:
        step: 10s # Export interval set to 10 seconds
  tracing:
    sampling:
      probability: 1.0